name: Batch_service Deploy to AWS CI/CD

on:
  workflow_dispatch:

jobs:
  # CI: Docker 빌드 및 ECR 푸시
  ci:
    name: Build & Push Docker Image to AWS ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: Create application.properties
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_PROPERTIES }}" > src/main/resources/application.properties

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Set Commit Hash as Docker Tag
        run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker Image
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          BATCH_IMAGE_TAG: ${{ env.COMMIT_HASH }}
          LATEST_TAG: latest
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}

        run: |
          set -e
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$BATCH_IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$BATCH_IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$LATEST_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$BATCH_IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$LATEST_TAG

      - name: Notify Success
        if: success()
        run: echo "Batch Service Docker image pushed successfully!"

  # CD: 매니페스트 파일 업데이트 및 배포
  cd:
    name: Update Deployment with New Image Tag
    needs: ci
    runs-on: ubuntu-latest

    steps:
      - name: Checkout manifest repository
        uses: actions/checkout@v4
        with:
          repository: Cloud-Engineering2/cinebox-manifest
          ref: main
          token: ${{ secrets.GIT_TOKEN }}

      - name: Update image tag in deployment manifest
        run: |
          IMAGE_TAG=${{ env.COMMIT_HASH }}
          sed -i 's|image: .*$|image: '"${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:${{ env.COMMIT_HASH }}"'|g' ./backend/deployment/cinebox-deployment.yaml

      - name: Commit and push changes if necessary
        run: |
          git config --local user.email "${{ secrets.GIT_EMAIL }}"
          git config --local user.name "CI Bot"
          git add -A
          git commit -m "Update backend image to new commit hash"
          git push || git push --force

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f ./backend/deployment/cinebox-deployment.yaml

      - name: Notify Success
        run: echo "Deployment to Kubernetes completed successfully!"
