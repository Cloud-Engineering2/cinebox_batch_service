name: Deploy Batch Service

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Set Commit Hash as Docker Tag
        run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build and Push Docker Image
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          BATCH_IMAGE_TAG: ${{ env.COMMIT_HASH }}
          LATEST_TAG: latest
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}

        run: |
          set -e
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$BATCH_IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$BATCH_IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$LATEST_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$BATCH_IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$LATEST_TAG

      - name: Notify Success
        if: success()
        run: echo "Batch Service Docker image pushed successfully!"
